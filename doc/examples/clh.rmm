forbidden
  CS CS

data
  m0 = 0 : [0:1]
  m1 = 0 : [0:1]
  m2 = 0 : [0:1]
  lock = 2 : [0:2]

process
registers
  $i = 0 : [0:2]
  $p = 0 : [0:2]
text
L0:
  either{
     assume: $i = 0; write: m0 := 1
  or assume: $i = 1; write: m1 := 1
  or assume: $i = 2; write: m2 := 1
  };
  read: $p := lock;
  cas(lock,$p,$i);
  either{
     assume: $p = 0; read: m0 = 0
  or assume: $p = 1; read: m1 = 0
  or assume: $p = 2; read: m2 = 0 
  };
CS:
  either{
     assume: $i = 0; write: m0 := 0
  or assume: $i = 1; write: m1 := 0
  or assume: $i = 2; write: m2 := 0
  };
  $i := $p;
  goto L0

process
registers
  $i = 1 : [0:2]
  $p = 1 : [0:2]
text
L0:
  either{
     assume: $i = 0; write: m0 := 1
  or assume: $i = 1; write: m1 := 1
  or assume: $i = 2; write: m2 := 1
  };
  read: $p := lock;
  cas(lock,$p,$i);
  either{
     assume: $p = 0; read: m0 = 0
  or assume: $p = 1; read: m1 = 0
  or assume: $p = 2; read: m2 = 0 
  };
CS:
  either{
     assume: $i = 0; write: m0 := 0
  or assume: $i = 1; write: m1 := 0
  or assume: $i = 2; write: m2 := 0
  };
  $i := $p;
  goto L0

